from A2.BruteForce import *
import requests


class MainBrokAuth:

    def __init__(self, url, path):
        self.url = url
        self.path = path
        self.log = list()
        self.log_csv = list()

        self.list_url = file_to_set(path + "/crawled.txt")
        self.db_login = file_to_list("db/db_login.txt")
        self.boot()

    def boot(self):
        url_login = list()
        for x in self.list_url:
            for y in self.db_login:
                if x.__contains__(y):
                    try:
                        re = requests.get(x, timeout=5)
                        if re.status_code == 200:
                            url_login.append(x)
                    except requests.exceptions.HTTPError as err:
                        self.log.append(err)
                    except requests.exceptions.RequestException as err:
                        self.log.append(err)
                    break

        if len(url_login) > 0:
            self.log.append("result Brute Force")
            for url in url_login:
                print(url)
                self.log.append("url : " + url)
                try:
                    bf = BruteForce(url)
                    for output in bf.return_output():
                        self.log.append(output)
                    for output in bf.return_output_csv():
                        self.log_csv.append(output)
                except:
                    self.log.append("brute force failed - Error")
                self.log.append("")
        else:
            self.log.append("tidak menemukan link login")

    def return_output(self):
        output = self.log
        return output

    def return_output_csv(self):
        output = self.log_csv
        return output

#mainBrokAuth('https://www.hackthissite.org', 'hack')
#mainBrokAuth("http://192.168.10.8", 'test')