import threading
from queue import Queue
from spider import Spider
from domain import *
from general import *


class MainCrawl:

    def __init__(self, url, prname):
        self.DOMAIN_NAME = get_sub_domain_name(url)
        self.PROJECT_NAME = prname
        self.HOMEPAGE = url
        self.QUEUE_FILE = self.PROJECT_NAME + '/queue.txt'
        self.CRAWLED_FILE = self.PROJECT_NAME + '/crawled.txt'
        self.NUMBER_OF_THREADS = 5
        self.queue = Queue()

        self.boot()

    def boot(self):
        # print(self.PROJECT_NAME, self.HOMEPAGE, self.DOMAIN_NAME)
        Spider(self.PROJECT_NAME, self.HOMEPAGE, self.DOMAIN_NAME)

        self.create_workers()
        self.crawl()

    def create_workers(self):
        for _ in range(self.NUMBER_OF_THREADS):
            t = threading.Thread(target=self.work)
            t.daemon = True
            t.start()

    def work(self):
        while True:
            url = self.queue.get()
            Spider.crawl_page(threading.current_thread().name, url)
            self.queue.task_done()

    def create_jobs(self):
        for link in file_to_set(self.QUEUE_FILE):
            self.queue.put(link)
        self.queue.join()
        self.crawl()

    def crawl(self):
        queued_links = file_to_set(self.QUEUE_FILE)
        if len(queued_links) > 0:
            print(str(len(queued_links)) + ' links in queue')
            self.create_jobs()
        else:
            print("link di queue tidak ada")

# MainCrawl('https://www.hackthissite.org', 'hack')
#MainCrawl('http://192.168.10.7', 'test')
